name: Build Ruby for GitHub Actions
on:
  push:
    paths-ignore:
    - README.md
jobs:
  # Build stable releases
  build:
    if: true
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-16.04, ubuntu-18.04, ubuntu-20.04, macos-latest ]
        ruby: ["ruby-3.0.2"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=toolcache
        echo "::set-output name=tag::$tag"
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/tenderlove/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ matrix.ruby }}-${{ matrix.os }}.tar.gz'

    - name: Set NO_DOCUMENT
      run: |
        if [[ "${{ matrix.ruby }}" == ruby-1.9* ]]; then
          echo "NO_DOCUMENT=--no-ri --no-rdoc" >> $GITHUB_ENV
        else
          echo "NO_DOCUMENT=--no-document" >> $GITHUB_ENV
        fi

    # Ruby <= 2.3 needs OpenSSL 1.0.2 which cannot be installed on Ubuntu 16.04 and macos-latest.
    # To workaround that, we use a branch of ruby-build which builds its own OpenSSL.
    - name: Clone ruby-build
      run: |
        if [[ "${{ matrix.ruby }}" == ruby-2.[0123]* || "${{ matrix.ruby }}" == ruby-1.9* ]]; then
          git clone --branch ruby23-openssl-linux https://github.com/eregon/ruby-build.git
        else
          git clone https://github.com/rbenv/ruby-build.git
        fi
    - name: Install ruby-build
      run: sudo ./ruby-build/install.sh

    - name: List versions
      run: ruby-build --definitions

      # Install packages
    - run: sudo apt-get install -y --no-install-recommends libyaml-dev libgdbm-dev libreadline-dev libncurses5-dev
      if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.ruby, 'ruby-')

    - name: Install system ruby for ruby-2.5.2
      run: sudo apt-get install -y --no-install-recommends ruby
      if: startsWith(matrix.os, 'ubuntu') && matrix.ruby == 'ruby-2.5.2'

    - name: Set RUBY_BUILD_RUBY_NAME
      run: |
        ruby="${{ matrix.ruby }}"
        if [[ $ruby == ruby-* ]]; then
          echo "RUBY_BUILD_RUBY_NAME=${ruby#ruby-}" >> $GITHUB_ENV
        else
          echo "RUBY_BUILD_RUBY_NAME=$ruby" >> $GITHUB_ENV
        fi
    - name: Set PREFIX
      run: |
        ruby="${{ matrix.ruby }}"
        if [[ $ruby == ruby-* ]]; then
          # See https://github.com/ruby/setup-ruby/issues/98
          echo "PREFIX=$RUNNER_TOOL_CACHE/Ruby/${ruby#ruby-}/x64" >> $GITHUB_ENV
        else
          echo "PREFIX=$HOME/.rubies/$ruby" >> $GITHUB_ENV
        fi
    - run: rm -rf $PREFIX

    # macOS runners seem to default to -Werror=implicit-function-declaration, but extconf.rb expects it to be not fatal
    # See https://bugs.ruby-lang.org/issues/17777 for 2.6.7
    - name: Set warnflags for Ruby <= 2.2
      run: echo "warnflags=-Wno-error=implicit-function-declaration" >> $GITHUB_ENV
      if: startsWith(matrix.ruby, 'ruby-1.9') || startsWith(matrix.ruby, 'ruby-2.0') || startsWith(matrix.ruby, 'ruby-2.1') || startsWith(matrix.ruby, 'ruby-2.2') || matrix.ruby == 'ruby-2.6.7'
    - name: Build Ruby
      run: ruby-build --verbose $RUBY_BUILD_RUBY_NAME $PREFIX
      env:
        RUBY_CONFIGURE_OPTS: --disable-shared --disable-install-doc
        CPPFLAGS: "-DENABLE_PATH_CHECK=0" # https://github.com/actions/virtual-environments/issues/267
    - name: Create archive
      run: tar czf ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz -C $(dirname $PREFIX) $(basename $PREFIX)
    - name: Install Bundler if needed
      run: |
        if [ ! -e $PREFIX/bin/bundle ]; then
          export PATH="$PREFIX/bin:$PATH"
          gem install bundler -v '~> 1' $NO_DOCUMENT
        fi

    - run: echo "$PREFIX/bin" >> $GITHUB_PATH
    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts URI.send(:open, %{https://rubygems.org/}) { |f| f.read(1024) }'
    - name: Install JSON gem
      run: gem install json -v '2.2.0' $NO_DOCUMENT
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version
    - run: ruby test_subprocess.rb

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/tenderlove/ruby-builder/releases/48992313/assets{?name,label}'
        asset_path: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_name: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip

  buildJRubyWindows:
    if: false
    strategy:
      fail-fast: false
      matrix:
        include:
        - { os: windows-latest, jruby-version: 9.2.19.0, ruby: jruby-9.2.19.0 }
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set tag name
      id: info
      run: |
        tag=toolcache
        echo "::set-output name=tag::$tag"
      shell: bash
    - name: Check if already built
      run: '! curl -s --head --fail https://github.com/tenderlove/ruby-builder/releases/download/${{ steps.info.outputs.tag }}/${{ matrix.ruby }}-${{ matrix.os }}.tar.gz'
      shell: bash

    - name: Set PREFIX
      run: echo "PREFIX=$HOME/.rubies/${{ matrix.ruby }}" >> $GITHUB_ENV
      shell: bash
    - run: curl --fail -L -O 'https://repo1.maven.org/maven2/org/jruby/jruby-dist/${{ matrix.jruby-version }}/jruby-dist-${{ matrix.jruby-version }}-bin.tar.gz'
      shell: bash
    - name: Build JRuby
      shell: bash
      run: |
        mkdir $(dirname $PREFIX)
        tar xf jruby-dist-${{ matrix.jruby-version }}-bin.tar.gz -C $(dirname $PREFIX)
        cd $PREFIX/bin
        # Copy bash launcher, so 'ruby' works in bash
        cp jruby ruby
        # Create ruby.bat, so 'ruby' works in pwsh
        echo -en "@ECHO OFF\r\n@\"%~dp0jruby.exe\" %*\r\n" > ruby.bat
    - name: Create archive
      run: tar czf ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz -C $(dirname $PREFIX) $(basename $PREFIX)
      shell: bash
    - name: Install Bundler if needed
      shell: bash
      run: |
        if [ ! -e $PREFIX/bin/bundle ]; then
          export PATH="$PREFIX/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi

    - run: echo "$Env:UserProfile\.rubies\${{ matrix.ruby }}\bin" >> $Env:GITHUB_PATH
    - run: echo $Env:PATH

    - run: ruby --version
    - run: ruby -ropen-uri -e 'puts URI.send(:open, %{https://rubygems.org/}) { |f| f.read(1024) }'
    - run: gem install json:2.2.0 --no-document
    - run: bundle --version
    - run: bundle install
    - run: bundle exec rake --version

    - run: ruby --version
      shell: bash
    - run: ruby -ropen-uri -e 'puts URI.send(:open, %{https://rubygems.org/}) { |f| f.read(1024) }'
      shell: bash
    - run: gem install json:2.2.0 --no-document
      shell: bash
    - run: bundle --version
      shell: bash
    - run: bundle install
      shell: bash
    - run: bundle exec rake --version
      shell: bash

    - name: Upload Built Ruby
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # curl -s "https://api.github.com/repos/ruby/ruby-builder/releases/tags/$TAG" | jq -r .upload_url
        upload_url: 'https://uploads.github.com/repos/tenderlove/ruby-builder/releases/48992313/assets{?name,label}'
        asset_path: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_name: ${{ matrix.ruby }}-${{ matrix.os }}.tar.gz
        asset_content_type: application/gzip
